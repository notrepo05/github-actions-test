name: CI
concurrency: hello
on:
  tags:
    - RT-**-run.*/4.0

  pull_request:
    paths:
      - '*'
  workflow_dispatch:
    inputs:
      publish-tas:
        description: 'Publish TAS'
        required: true
        type: boolean
      publish-ist:
        description: 'Publish IST'
        required: true
        type: boolean
      publish-tasw:
        description: 'Publish TASW'
        required: true
        type: boolean

      step:
        description: 'Select step'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - upload
          - publish
          - release-notes
jobs:
  detect:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    outputs:
      products: ${{ steps.detect.outputs.products }}
      step: ${{ steps.detect.outputs.step }}
    steps:
      - uses: actions/checkout@v2
      - id: detect
        name: compute selections
        run: .github/tasks/detect.sh
        env:
          PUBLISH_TAS: ${{ github.event.inputs.publish-tas }}
          PUBLISH_IST: ${{ github.event.inputs.publish-ist }}
          PUBLISH_TASW: ${{ github.event.inputs.publish-tasw }}
          STEP: ${{ github.event.inputs.step }}


  publish:
    if: ${{ needs.detect.outputs.step == 'publish' || needs.detect.outputs.step == 'all' }}
    needs: [detect]
    container:
      image: pivotalcfreleng/golang

    timeout-minutes: 90
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        product: ${{ fromJson(needs.detect.outputs.products) }}

    steps:
      - id: test-inline-bash
        env:
          UPLOADED: true
        run: |
          if [[ "${UPLOADED}" == "true" ]]; then
              echo "Tile is' uploaded' to Tanzunet."
          else
              echo "Tile is not uploaded to Tanzunet yet. Run the 'Build-Upload-Publish_Release_Notes' first."
              exit 1
          fi

      - uses: actions/checkout@v2
      - id: run
        name: run it
        run: .github/tasks/test.sh
        env:
          PRODUCT: ${{ github.event.inputs.product }}
          STEP: ${{ github.event.inputs.step }}
